Стратегическая писанина для систематизации мыслей и внутреннего обсуждения

offline Mediation vs ETL и "продукты" для них

Mediation (имеется в виду для CDR) и ETL это задачи якобы одного класса (multiple structures batch processing) но (по факту)
достаточно разные, чтобы позиционироваться отдельно:
- CDR MS работает только с событиями ("фактами"),
  ETL (в общем случае) имеет дело с E/R иерархиями на входе и "единой" E/R иерархией на выходе (+ факты, конечно же)
- CDR MS в "классическом" варианте не накапливает данные, а "пробрасывает" их "ключевые" в целевые системы (в первую очередь
   в конкретные Interconnect billing и Customer billing - ради них основная алгоритмика). Все прочие потребители - за компанию.
   ETL тоже не накапливает данные, но "присоединяет" их к DWH (пополняет его), хранилище (в классическом варианте) - одно
- ETL алгоритмически намного сложнее MS и эта сложность реализуется за счет многочисленных преобразований  через временные
   структуры данных (create/insert/merge as select - физические или виртуальные). Цепочка преобразований (теоретически) не ограничена.
   MS фильтрует факты, досчитывает поля (обогащает), коррелирует (аггрегирует) или клонирует (тиражирует) строки фактов.
   Цепочка преобразований тоже (теоретически) не ограничена, но на практике (это IMHO, мировые бренды считают иначе) может быть
   сведена к предопределенному набору этапов.
- CDR MS работает со специфическими файловыми форматами и ценность (для заказчика) в том что эта возможность достается
  (вся или в основном) "из коробки". ETL работает с "входными технологиями", конкретные форматы настраиваются и по возможности
  сразу же переводятся в реляционную (табличную) нотацию.
- "коробочные" MS мировых брендов основаны на идее "единого внутреннего формата" (или нескольких, не предопределенных
   в дизайне,  но конкретизируемых в конкретном проекте - как то HP IUM в Vodafone). В "единых форматах" по необходимости валятся
   в кучу котлеты и мухи, но без них невозможен common framework design.
   Для ETL само понятие "единых форматов" неприменимо. Сколько структур данных надо - столько и будет.

В результате у ETL и CDR MS есть сложившиеся не пересекающиеся рынки - как продуктов "можем все, что угодно" (как правило
за большие деньги, но есть также talend.com), так и самописных инструментов (скрипты + БД / Hadoop) решения конкретных задач.

Хотя бы чуточку известные мне "изнутри" CDR Mediation (Comptel, HP IUM, Ericcson) сделаны в файловой парадигме с упором на
максимально эффективное использование ресурсов. Везде - низкоуровневые псевдоязыки и rule chain descriptions.
Получается "очень черный ящик" и прокрустов единый формат, но с этим мирятся - ибо данные крайне ценны, а "объемы давят".
Только Intec Intermediate БД-центрический (причем Oracle!), но он заточен на соседство с Intec InterconnecT и стОит неимоверно.

С учетом эволюции архитектур (cloud, component design, open source) и hardware - что можем предложить мы ?
Пытаться сделать очередной инструмент ETL - без вариантов, лучше изучить и научиться внедрять Talend (для бедных) / ODI (для богатых).
Или все же замутить очередную CDR Mediation - но ОЧЕНЬ не похожую на существующие продукты (иначе в чем смысл).

Cloud enabled Oracle centric CDR offline Mediation
Мировые тенденции таковы, что:
- стоимость процессорных ресурсов, оперативки (в меньшей степени) и дискового storage непрерывно падают (попутно SSD рулят !)
- количества/объемы сессионных CDR не растут или растут медленно (теперь я это точно знаю ;-)), для типичного ОпСоС-а:
  * голосовых записей 20-30 на абонента в сутки (включая неответы и транзиты по сети)
  * SMS и прочих VAS порядка 5 на абонента в сутки
  * сессионных (!) записей data-трафика тоже 20-30 на абонента в сутки (да, это количество растет с годами, но не в разы)

Таким образом задачи, где "объемы давят" смещаются в область совсем уже больших сетей и значение супер-эффективности
по ресурсам снижается, при этом "черный ящик", vendor lock и невменяемые стоимости лицензий "коробок" - остаются.
Несмотря на снижение удельной стоимости CDR ($/Gbyte) неизменным остается также revenue assurance requirements,
ибо CDR - это реальные деньги, в отличие от NetFlows, ProxyLogs, DiameterLogs и прочих операторских "больших" данных,
которые может быть и деньги, но - но - но ...
К тому же таких "логов" реально много и их отличие от CDR в удельной стоимости - не один порядок.
Вот для них, возможно, имеет смысл применять совсем другой (не-RDBMS) стек технологий - Hadoop, Ni-Fi. Не для CDR.

По сумме обстоятельств я преданный адепт СУБД-центрических CDR Mediation (по умолчанию это Oracle, но теоретически
любая ACID RDBMS со stored code и partitions годятся - тот же Postrge + Timescaledb чем не кандидат, теоретически), поскольку:
- хранение данных в "открытых" табличных форматах дает произвольный доступ к ним, в том числе для troubleshooting,
  в том числе сторонними средствами, в том числе с заранее не предусмотренными целями. ODBC/JDBC = open world.
  Много структур данных - не вопрос, всему найдется место, в ETL это никого не смущает.
- совмещаются управляющие данные (справочники), обрабатываемые данные и обрабатывающий код, никаких внешних
  "синхронизаций", network roudtrips & remote calls. Если потребители информации (биллинги) тоже в БД и понимают
   select @ link - никаких лишних конверсий (и ресурсов) при выдаче.
- partitioning дает эффективное и прозрачное управление жизненным циклом данных, Mediation становится CDR warehouse
- backup/recovery, security, resource management, monitoring, availability & ACID делегируются БД и инфраструктуре, никаких "велосипедов"
Наша CDR Mediation для Укртелеком живет и здравствует десяток лет, бессовестно пожиная вышеописанные блага.
Вот только цена и порог входа ... их надо побороть.

СЛЕДУЮЩИМ ОБРАЗОМ:
- предложить cloud fast start с минимальными затратами (и последующим переходом на on_premise "если взлетит")
- on_premise, до некоторого масштаба, предлагать использовать SE2, пожертвовав availability и проводя по ночам data management

ДЛЯ ЭТОГО НАДО:
- развернуть MS_MAIN + MS_XXX + MS_DATA_XXX на хостинге, наполнить их демонстрационными данными
  быть готовыми быстро создать "пустой клон" для заказчика
- развернуть файловый сервис на виртуалке (Windows), чтобы быстро показать загрузку "в облако", процессинг там и выгрузку
  быть готовыми отдать его копию заказчику
- клиентская часть (и отчеты) однозначно должны быть без WL EE и достаточно приятны глазу
  для этого не нужен клон всех форм Укртелеком, но минимум для поддержки основных use cases (прописать, протестировать)
- позиционировать Oracle SQL Developer (который умеет в cloud) как "штатное" средство для ad-hoc работы с данными
  в том числе понаписывать "типовых" (демонстрационных) скриптов и быть готовыми показать, как ими пользоваться
- создать и протестировать упомянутые средства self data management, чтобы система могла жить бесконечно без partitioning
А теперь интересные вопросы по новым технологиям (нужны ли, и зачем):
- что дадут ORA-18c+ pluggable cloud-технологии (application_root + seed$pdb + n * PDBs) и оправдан ли редизайн
  совместное использование данных хорошее, но не лучше, чем у нас сейчас; изоляция tenant - то, что у нас users & RLS
  да, там есть приятные фичи по многосхемным application, встроенные multiversion upgrade/patch и легкий plug/unplug
  но действительно ли "сервисов=PDB=схем" будет очень много и они будут кочевать туда-сюда ? скорее - нет
- что даст (в рассмотренном выше случае) новый Java pre_parser/integrated_loader + PL/SQL parser на который я сейчас навострился
  отказ от "Windows + good_old_Perl" (в пользу Java @ Everywhere) это вроде бы неплохо, но не самоцель
  даем готовую виртуалку (не модный docker - но тоже решение "из коробки"), настройте (сколько надо штук) и пользуйтесь


